//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetProg6.Server {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCard", ReplyAction="http://tempuri.org/IService/AddCardResponse")]
        bool AddCard(long cardNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCard", ReplyAction="http://tempuri.org/IService/AddCardResponse")]
        System.Threading.Tasks.Task<bool> AddCardAsync(long cardNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBalance", ReplyAction="http://tempuri.org/IService/GetBalanceResponse")]
        long GetBalance(long cardNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBalance", ReplyAction="http://tempuri.org/IService/GetBalanceResponse")]
        System.Threading.Tasks.Task<long> GetBalanceAsync(long cardNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeCardBalance", ReplyAction="http://tempuri.org/IService/ChangeCardBalanceResponse")]
        long ChangeCardBalance(long cardNum, long moneyToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ChangeCardBalance", ReplyAction="http://tempuri.org/IService/ChangeCardBalanceResponse")]
        System.Threading.Tasks.Task<long> ChangeCardBalanceAsync(long cardNum, long moneyToAdd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : NetProg6.Server.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<NetProg6.Server.IService>, NetProg6.Server.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCard(long cardNum) {
            return base.Channel.AddCard(cardNum);
        }
        
        public System.Threading.Tasks.Task<bool> AddCardAsync(long cardNum) {
            return base.Channel.AddCardAsync(cardNum);
        }
        
        public long GetBalance(long cardNum) {
            return base.Channel.GetBalance(cardNum);
        }
        
        public System.Threading.Tasks.Task<long> GetBalanceAsync(long cardNum) {
            return base.Channel.GetBalanceAsync(cardNum);
        }
        
        public long ChangeCardBalance(long cardNum, long moneyToAdd) {
            return base.Channel.ChangeCardBalance(cardNum, moneyToAdd);
        }
        
        public System.Threading.Tasks.Task<long> ChangeCardBalanceAsync(long cardNum, long moneyToAdd) {
            return base.Channel.ChangeCardBalanceAsync(cardNum, moneyToAdd);
        }
    }
}
